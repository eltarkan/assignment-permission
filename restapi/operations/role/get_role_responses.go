// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"assignment-permission/models"
)

// GetRoleOKCode is the HTTP code returned for type GetRoleOK
const GetRoleOKCode int = 200

/*
GetRoleOK OK

swagger:response getRoleOK
*/
type GetRoleOK struct {

	/*
	  In: Body
	*/
	Payload models.RoleListAllResponse `json:"body,omitempty"`
}

// NewGetRoleOK creates GetRoleOK with default headers values
func NewGetRoleOK() *GetRoleOK {

	return &GetRoleOK{}
}

// WithPayload adds the payload to the get role o k response
func (o *GetRoleOK) WithPayload(payload models.RoleListAllResponse) *GetRoleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get role o k response
func (o *GetRoleOK) SetPayload(payload models.RoleListAllResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.RoleListAllResponse{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRoleInternalServerErrorCode is the HTTP code returned for type GetRoleInternalServerError
const GetRoleInternalServerErrorCode int = 500

/*
GetRoleInternalServerError Internal Server Error

swagger:response getRoleInternalServerError
*/
type GetRoleInternalServerError struct {
}

// NewGetRoleInternalServerError creates GetRoleInternalServerError with default headers values
func NewGetRoleInternalServerError() *GetRoleInternalServerError {

	return &GetRoleInternalServerError{}
}

// WriteResponse to the client
func (o *GetRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
