// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"assignment-permission/models"
)

// PostRoleOKCode is the HTTP code returned for type PostRoleOK
const PostRoleOKCode int = 200

/*
PostRoleOK OK

swagger:response postRoleOK
*/
type PostRoleOK struct {

	/*
	  In: Body
	*/
	Payload *models.RoleCreateSuccessResponse `json:"body,omitempty"`
}

// NewPostRoleOK creates PostRoleOK with default headers values
func NewPostRoleOK() *PostRoleOK {

	return &PostRoleOK{}
}

// WithPayload adds the payload to the post role o k response
func (o *PostRoleOK) WithPayload(payload *models.RoleCreateSuccessResponse) *PostRoleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post role o k response
func (o *PostRoleOK) SetPayload(payload *models.RoleCreateSuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRoleInternalServerErrorCode is the HTTP code returned for type PostRoleInternalServerError
const PostRoleInternalServerErrorCode int = 500

/*
PostRoleInternalServerError Internal Server Error

swagger:response postRoleInternalServerError
*/
type PostRoleInternalServerError struct {
}

// NewPostRoleInternalServerError creates PostRoleInternalServerError with default headers values
func NewPostRoleInternalServerError() *PostRoleInternalServerError {

	return &PostRoleInternalServerError{}
}

// WriteResponse to the client
func (o *PostRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
